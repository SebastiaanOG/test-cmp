{
	"name": "02 MDDB Source2",
	"properties": {
		"activities": [
			{
				"name": "LU_Tables",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LU_Database_name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT SCHEMA_NAME(T.schema_id) AS [SCHEMA_NAME],\n\t\tT.name AS [TABLE_NAME], \n       I.rows AS [ROWCOUNT] \nFROM   sys.tables AS T \n       INNER JOIN sys.sysindexes AS I \n               ON T.object_id = I.id \n                  AND I.indid < 2\nWHERE i.rows > 0",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_source2_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "FE_INS_Metadata",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LU_Tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LU_Tables').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "LU_Structure",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ',  '''' , string(item().Table_name) , '''' , 'AND TABLE_SCHEMA = ', '''' , string(item().Schema_name) , '''' )",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ds_source2_table",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "Insert_Structure",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "LU_Structure",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 60,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[ETL].[spInsertMetadata]",
								"storedProcedureParameters": {
									"Json": {
										"value": {
											"value": "@string(activity('LU_Structure').output.value)",
											"type": "Expression"
										},
										"type": "String"
									},
									"lSchema": {
										"value": {
											"value": "@item().SCHEMA_NAME",
											"type": "Expression"
										},
										"type": "String"
									},
									"lTable": {
										"value": {
											"value": "@item().TABLE_NAME",
											"type": "Expression"
										},
										"type": "String"
									},
									"SystemCode": {
										"value": "Source2",
										"type": "String"
									},
									"SystemName": {
										"value": {
											"value": "@activity('LU_Database_name').output.firstrow.currentdatabase",
											"type": "Expression"
										},
										"type": "String"
									},
									"SystemType": {
										"value": "sqlserver",
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_sqldb_mddb_m10mdf",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "LU_Database_name",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "spStartPipelineRun",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT top 1 DB_NAME() AS [CurrentDatabase] \nFROM sys.databases",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_source2_table",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "spStartPipelineRun",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[spStartPipelineRun]",
					"storedProcedureParameters": {
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"pipeline_name": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"process_run_id": {
							"value": {
								"value": "@pipeline().parameters.process_run_id",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqldb_m10mdf",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "spEndPipelineRun",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "FE_INS_Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[audit].[spEndPipelineRun]",
					"storedProcedureParameters": {
						"pipeline_run_id": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sqldb_m10mdf",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"process_run_id": {
				"type": "string",
				"defaultValue": "-1"
			}
		},
		"folder": {
			"name": "MDDB"
		},
		"annotations": [],
		"lastPublishTime": "2020-12-04T14:48:06Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}